name: Create New GCP Composer Environment (Airflow instance)

on:
  workflow_dispatch:
    inputs:
      newComposerEnvName:
        description: 'Name for the new Google Cloud Composer Environment (Airflow instance)'
        required: true

jobs:
  create-new-env:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Google Cloud Utilities
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.GCS_PROJECT }}
          export_default_credentials: true
      - name: Create New Environment
        run: gcloud composer environments create ${{ github.event.inputs.newComposerEnvName }} --location=europe-west2 --project=datapipeline-295515 --machine-type=n1-standard-2
        # run: gcloud composer environments describe ${{ github.event.inputs.newComposerEnvName }} --location=europe-west2 --project=datapipeline-295515
      - name: Get URL of new DAG bucket full path
        id: dag_path
        run: |
          dagpath=$(gcloud composer environments describe --location=europe-west2 --project=datapipeline-295515 ${{ github.event.inputs.newComposerEnvName }} --flatten=config.dagGcsPrefix --format=object)
          echo "::debug::${dagpath}"
          echo "::set-output name=dag_url::${dagpath}"
      - name: Get URL of new DAG bucket root
        id: bucket_root
        run: |
          url=$(python -c "import re; print(re.search('(gs:.+\/)(dags$)', r'${{ steps.dag_path.outputs.dag_url }}').group(1))")
          echo "::set-output name=bucket_url::${url}"
      - name: Update DAG bucket secret
        run: echo ${{ steps.bucket_root.outputs.bucket_url }}
      #   uses: hmanzur/actions-set-secret@v2.0.0
      #   with:
      #     name: 'GCLOUD_BUCKET_PATH'
      #     value: ${{ steps.bucket_root.outputs.bucket_url }}
      #     repository: ${{ env.GITHUB_REPOSITORY	}}
      #     token: ${{ secrets.REPO_ACCESS_TOKEN }}
